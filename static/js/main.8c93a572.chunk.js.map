{"version":3,"sources":["components/song/song.component.jsx","components/player/player.component.jsx","components/library-song/library-song.component.jsx","components/library/library.component.jsx","components/nav/nav.component.jsx","data.js","App.js","index.js"],"names":["Song","currentSong","className","src","cover","alt","name","artist","Player","isPlaying","setIsPlaying","audioRef","setSongInfo","songInfo","songs","setCurrentSong","setSongs","useEffect","newSongs","map","song","id","active","getTime","time","Math","floor","slice","skipTrackhandler","direction","a","currentIndex","findIndex","length","current","play","trackAnimation","transform","animationPercentage","trackBackground","background","color","currentTime","style","onChange","e","target","value","min","max","duration","type","onClick","size","icon","faAngleLeft","pause","faPause","faPlay","faAngleRight","LibrarySong","songSelectHandler","selectedSong","filter","Library","libraryStatus","Nav","setLibraryStatus","faMusic","chillHop","audio","uuidv4","App","useState","data","useRef","timeUpdateHandler","roundedCurrent","round","roundedDuration","animation","songEndHandler","onLoadedMetadata","onTimeUpdate","ref","onEnded","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8c93a572.chunk.js","sourcesContent":["import './song.styles.scss'\r\n\r\nconst Song = ({currentSong}) => (\r\n    <div className=\"song-container\">\r\n        <img src={currentSong.cover} alt=\"cover\" />\r\n        <h2>{currentSong.name}</h2>\r\n        <h3>{currentSong.artist}</h3>\r\n    </div>\r\n)\r\n\r\nexport default Song;","import \"./player.styles.scss\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faPlay,\r\n  faAngleLeft,\r\n  faAngleRight,\r\n  faPause,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {} from \"../../\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst Player = ({\r\n  currentSong,\r\n  isPlaying,\r\n  setIsPlaying,\r\n  audioRef,\r\n  setSongInfo,\r\n  songInfo,\r\n  songs,\r\n  setCurrentSong,\r\n  setSongs,\r\n}) => {\r\n  useEffect(() => {\r\n    const newSongs = songs.map((song) => {\r\n      if (song.id === currentSong.id) {\r\n        return { ...song, active: true };\r\n      } else {\r\n        return { ...song, active: false };\r\n      }\r\n    });\r\n\r\n    setSongs(newSongs);\r\n  }, [currentSong]);\r\n\r\n  const getTime = (time) => {\r\n    return (\r\n      Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n    );\r\n  };\r\n\r\n  const dragHandler = (e) => {\r\n    audioRef.current.currentTime = e.target.value;\r\n    setSongInfo({\r\n      ...songInfo,\r\n      currentTime: e.target.value,\r\n    });\r\n  };\r\n\r\n  const playSongHandler = () => {\r\n    if (isPlaying) {\r\n      audioRef.current.pause();\r\n      setIsPlaying(!isPlaying);\r\n    } else {\r\n      audioRef.current.play();\r\n      setIsPlaying(!isPlaying);\r\n    }\r\n  };\r\n\r\n  const skipTrackhandler = async(direction) => {\r\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\r\n    if (direction === \"skip-forward\") {\r\n     await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\r\n    } else if (direction === \"skip-back\") {\r\n      if ((currentIndex - 1) % songs.length === -1) {\r\n        setCurrentSong(songs[songs.length - 1]);\r\n        if(isPlaying) {\r\n          audioRef.current.play();\r\n        }\r\n        return;\r\n      }\r\n      setCurrentSong(songs[(currentIndex - 1) % songs.length]);\r\n    }\r\n    if(isPlaying) {\r\n      audioRef.current.play();\r\n    }\r\n  };\r\n\r\n  const trackAnimation = {\r\n    transform: `translateX(${songInfo.animationPercentage}%)`\r\n  }\r\n\r\n  const trackBackground = {\r\n    background: `linear-gradient(to right, ${currentSong.color[0]}, ${currentSong.color[1]} )`\r\n  }\r\n\r\n  return (\r\n    <div className=\"player\">\r\n      <div className=\"time-control\">\r\n        <p>{getTime(songInfo.currentTime)}</p>\r\n        <div style={trackBackground} className=\"track\">\r\n          <input\r\n            onChange={dragHandler}\r\n            min={0}\r\n            max={songInfo.duration}\r\n            value={songInfo.currentTime}\r\n            type=\"range\"\r\n          />\r\n          <div style={trackAnimation} className=\"animate-track\"></div>\r\n        </div>\r\n        <p>{getTime(songInfo.duration || 0)}</p>\r\n      </div>\r\n      <div className=\"play-control\">\r\n        <FontAwesomeIcon\r\n          onClick={() => skipTrackhandler(\"skip-back\")}\r\n          className=\"skip-back\"\r\n          size=\"2x\"\r\n          icon={faAngleLeft}\r\n        />\r\n        <FontAwesomeIcon\r\n          onClick={playSongHandler}\r\n          className=\"play\"\r\n          size=\"2x\"\r\n          icon={isPlaying ? faPause : faPlay}\r\n        />\r\n        <FontAwesomeIcon\r\n          onClick={() => skipTrackhandler(\"skip-forward\")}\r\n          className=\"skip-forward\"\r\n          size=\"2x\"\r\n          icon={faAngleRight}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Player;\r\n","import \"./library-song.styles.scss\";\r\n\r\nconst LibrarySong = ({ song, songs, setCurrentSong, id, audioRef, isPlaying, setSongs }) => {\r\n  const songSelectHandler = async () => {\r\n    const selectedSong = songs.filter(song => song.id === id);\r\n    \r\n    await setCurrentSong(selectedSong[0]);\r\n\r\n    const newSongs = songs.map(song => {\r\n      if(song.id === id) {\r\n        return { ...song, active: true }\r\n      }\r\n      else {\r\n        return { ...song, active: false }\r\n      }\r\n    })\r\n\r\n    setSongs(newSongs)\r\n\r\n    if(isPlaying) {\r\n      audioRef.current.play();\r\n    }\r\n\r\n   \r\n  };\r\n\r\n  return (\r\n    <div onClick={songSelectHandler} className={`library-song ${song.active ? \"selected\" : null}`}>\r\n      <img src={song.cover} alt=\"cover\" />\r\n      <div className=\"song-description\">\r\n        <h3>{song.name}</h3>\r\n        <h4>{song.artist}</h4>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LibrarySong;\r\n","import './library.styles.scss'\r\n\r\nimport LibrarySong from '../library-song/library-song.component'\r\n\r\nconst Library = ({songs, setCurrentSong, audioRef, isPlaying, setSongs, libraryStatus}) => (\r\n    <div className={`library ${libraryStatus ? 'active-library' : null}`} >\r\n        <h2>Library</h2>\r\n        <div className=\"library-songs\">\r\n        {\r\n            songs.map(song => <LibrarySong key={song.id} setSongs={setSongs} isPlaying={isPlaying} audioRef={audioRef} id={song.id} songs={songs} setCurrentSong={setCurrentSong} song={song} />)\r\n        }\r\n            \r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default Library;","import \"./nav.styles.scss\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMusic } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nav = ({libraryStatus, setLibraryStatus}) => {\r\n  return (\r\n    <div className=\"nav\">\r\n      <h1>Waves</h1>\r\n      <button onClick={() => setLibraryStatus(!libraryStatus)}>\r\n        Library\r\n        <FontAwesomeIcon icon={faMusic} />\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import { v4 as uuidv4 } from \"uuid\";\r\n\r\nfunction chillHop() {\r\n  return [\r\n    {\r\n      name: \"Beaver Creek\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\r\n      artist: \"Aso, Middle School, Aviino\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10075\",\r\n      color: [\"#205950\", \"#2ab3bf\"],\r\n      id: uuidv4(),\r\n      active: true,\r\n    },\r\n    {\r\n      name: \"Daylight\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\r\n      artist: \"Aiguille\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9272\",\r\n      color: [\"#EF8EA9\", \"#ab417f\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Keep Going\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\r\n      artist: \"Swørn\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9222\",\r\n      color: [\"#CD607D\", \"#c94043\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Nightfall\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\r\n      artist: \"Aiguille\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9148\",\r\n      color: [\"#EF8EA9\", \"#ab417f\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Reflection\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\r\n      artist: \"Swørn\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9228\",\r\n      color: [\"#CD607D\", \"#c94043\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Under the City Stars\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\r\n      artist: \"Aso, Middle School, Aviino\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10074\",\r\n      color: [\"#205950\", \"#2ab3bf\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    //ADD MORE HERE\r\n  ];\r\n}\r\n\r\nexport default chillHop;","import \"./app.scss\";\nimport Song from \"./components/song/song.component\";\nimport Player from \"./components/player/player.component\";\nimport Library from \"./components/library/library.component\";\nimport Nav from './components/nav/nav.component'\n\nimport data from \"./data\";\nimport { useState, useRef } from \"react\";\n\nfunction App() {\n  const [songs, setSongs] = useState(data());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const audioRef = useRef(null);\n  const [libraryStatus, setLibraryStatus] = useState(false)\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0,\n    animationPercentage: 0,\n  });\n\n  const timeUpdateHandler = (e) => {\n    const currentTime = e.target.currentTime;\n    const duration = e.target.duration;\n\n    const roundedCurrent = Math.round(currentTime)\n    const roundedDuration = Math.round(duration)\n    const animation = Math.round((roundedCurrent / roundedDuration) * 100)\n\n    setSongInfo({\n      currentTime,\n      duration,\n      animationPercentage : animation\n    });\n  };\n\n  const songEndHandler = async () => {\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);    \n    await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n    if(isPlaying) {\n      audioRef.current.play();\n    }\n  }\n\n  return (\n    <div className={`App ${libraryStatus ? 'library-active' : null}`}>\n    <Nav libraryStatus={libraryStatus} setLibraryStatus={setLibraryStatus} />\n      <Song currentSong={currentSong} />\n      <Player\n        audioRef={audioRef}\n        setIsPlaying={setIsPlaying}\n        isPlaying={isPlaying}\n        currentSong={currentSong}\n        setSongInfo={setSongInfo}\n        songInfo={songInfo}\n        songs={songs}\n        setCurrentSong={setCurrentSong}\n        setSongs={setSongs}\n      />\n      <Library\n        audioRef={audioRef}\n        songs={songs}\n        setCurrentSong={setCurrentSong}\n        isPlaying={isPlaying}\n        setSongs={setSongs}\n        libraryStatus={libraryStatus}\n      />\n      <audio\n        onLoadedMetadata={timeUpdateHandler}\n        onTimeUpdate={timeUpdateHandler}\n        ref={audioRef}\n        src={currentSong.audio}\n        onEnded={songEndHandler}\n      ></audio>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}